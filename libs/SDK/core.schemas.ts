/**
 * Generated by orval v6.10.3 üç∫
 * Do not edit manually.
 * NestJS API
 * desc
 * OpenAPI spec version: 1.0
 */
export interface UpdateCustomerDto {
  readonly id?: number;
  firstname?: string;
  lastname?: string;
  phone?: string;
  email?: string;
  company?: number | null;
}

export interface Customer {
  readonly id: number;
  firstname: string;
  lastname: string;
  phone: string;
  email: string;
  company: number | null;
}

export interface CreateCustomerDto {
  readonly id: number;
  firstname: string;
  lastname: string;
  phone: string;
  email: string;
  company: number | null;
}

export type LegalForm = typeof LegalForm[keyof typeof LegalForm];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const LegalForm = {
  AE: "AE",
  SARL: "SARL",
  SAS: "SAS",
  SASU: "SASU",
  EURL: "EURL",
  EI: "EI",
  EIRL: "EIRL",
} as const;

export interface UpdateCompanyDto {
  id?: number;
  legalname?: string;
  taxid?: string;
  address?: string;
  city?: string;
  state?: string;
  zip?: string;
  siret?: string;
  ape?: string;
  legalform?: LegalForm;
  website?: string;
  logo?: string;
  description?: string;
  industry?: string;
}

export interface Company {
  id: number;
  legalname: string;
  taxid: string;
  address: string;
  city: string;
  state: string;
  zip: string;
  siret: string;
  ape: string;
  legalform: LegalForm;
  website: string;
  logo: string;
  description: string;
  industry: string;
}

export interface CreateCompanyDto {
  id: number;
  legalname: string;
  taxid: string;
  address: string;
  city: string;
  state: string;
  zip: string;
  siret: string;
  ape: string;
  legalform: LegalForm;
  website: string;
  logo: string;
  description: string;
  industry: string;
}

export type EstimateStatus = typeof EstimateStatus[keyof typeof EstimateStatus];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const EstimateStatus = {
  draft: "draft",
  sent: "sent",
  accepted: "accepted",
  declined: "declined",
  cancelled: "cancelled",
  changes_requested: "changes_requested",
  expired: "expired",
} as const;

export interface UpdateEstimateDto {
  id?: number;
  customer?: number;
  billingAddress?: number;
  shippingAddress?: number;
  items?: EstimateField[];
  title?: string;
  description?: string;
  date?: Date;
  dueDate?: Date;
  terms?: string;
  notes?: string;
  tax?: number;
  globalDiscount?: number;
  owner?: number;
  createdAt?: Date;
  updatedAt?: Date;
  status?: EstimateStatus;
}

export interface Estimate {
  id: number;
  customer: number;
  billingAddress: number;
  shippingAddress: number;
  items: EstimateField[];
  title: string;
  description: string;
  date: Date;
  dueDate: Date;
  terms: string;
  notes: string;
  tax: number;
  globalDiscount: number;
  owner: number;
  createdAt: Date;
  updatedAt: Date;
  status: EstimateStatus;
}

export interface EstimateField {
  id: number;
  estimate: Estimate;
  title: string;
  description: string;
  quantity: number;
  unitPrice: number;
  discount: number;
  tax: number;
}

export interface CreateEstimateDto {
  id: number;
  customer: number;
  billingAddress: number;
  shippingAddress: number;
  items: EstimateField[];
  title: string;
  description: string;
  date: Date;
  dueDate: Date;
  terms: string;
  notes: string;
  tax: number;
  globalDiscount: number;
  owner: number;
  createdAt: Date;
  updatedAt: Date;
  status: EstimateStatus;
}

export interface ChangePasswordDTO {
  oldpassword: string;
  newpassword: string;
  confirmpassword: string;
}

export interface LoginResponse {
  access_token: string;
}

export interface LoginDTO {
  email?: string;
  password?: string;
}

export interface RegisterDTO {
  email: string;
  password: string;
}

export interface DeleteResult {
  [key: string]: any;
}

export interface UpdateUserDto {
  [key: string]: any;
}

export interface User {
  id: number;
  email: string;
  password: string;
  Company: number;
  customers: string[];
}

export interface CreateUserDto {
  id: number;
  email: string;
  password: string;
  Company: number;
  customers: string[];
}
